#!/usr/bin/env bash
#
# build_images.sh — Generate SVGs from CSV via pythonshp, stage final SVGs, then convert to optimized PNGs in parallel.
#
# Requirements (macOS via Homebrew):
#   brew install parallel inkscape pngquant oxipng
#
# Directory layout:
#   pythonshp/           # contains pythonshp.py
#   generated-svg/       # generated by the first step (auto-created)
#   override-svgs/       # optional: any prebuilt/override SVGs
#   svgs/                # final staged SVGs (generated + overrides)
#   pngs/                # final PNGs
#
set -euo pipefail

# ---- config ----
CSV="countries.csv"

# ---- sanity checks ----
need() { command -v "$1" >/dev/null 2>&1 || { echo "Error: '$1' not found in PATH" >&2; exit 127; }; }
need parallel
need inkscape
need pngquant
need oxipng

[ -d pythonshp ] || { echo "Error: missing 'pythonshp' directory"; exit 1; }

# Clean and prep
mkdir -p generated-svgs

# Use all cores (-j 0), comma-separated fields (--colsep ','),
parallel --colsep ',' -j 100% --halt soon,fail=1 --bar \
  'if [ ! -s "generated-svgs/{2}.svg" ]; then
     cd pythonshp &&
     ./pythonshp.py publicdomain wiki1 "{1}" locatormap > ../generated-svgs/{2}.svg;
   fi' \
  :::: "$CSV"

# ---- step 2: stage final SVGs into svgs/ (generated first, then overrides win) ----
mkdir -p svgs
cp -f generated-svgs/*.svg svgs/
cp -f override-svgs/*.svg svgs/

# ---- step 3: convert all svgs/*.svg into optimized pngs/*.png in parallel ----
mkdir -p pngs

# Find svgs and process in parallel. Safe for spaces via -print0/-0.
find "svgs" -maxdepth 1 -type f -name '*.svg' -print0 | \
parallel -0 -j 100% --halt soon,fail=1 --bar '
  svg="{}";
  base=$(basename "$svg" .svg);
  out="pngs/$base.png";
  # skip if non-empty output already exists
  if [ ! -s "$out" ]; then
    inkscape "$svg" --export-type=png --export-filename="$out" --export-width=1000;
    pngquant --quality=65-90 --speed 1 --strip --force --output "$out" "$out";
    oxipng -o max --strip all "$out";
  fi
'

echo "✅ Done. PNGs in ./pngs, SVGs in ./svgs"
